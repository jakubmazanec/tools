---
to: '.dockerignore'
if: <%- workspace.projects.some((project) => project.config.deployment?.appName) %>
strategy: overwrite
---
<%
let lines = [];

for (let project of workspace.projects) {
  if (project.config.deployment?.appName) {
    lines.push(`!${project.relativePath}/${SOURCE_DIRECTORY}/**`);
    lines.push(`!${project.relativePath}/env.d.ts`);
    lines.push(`!${project.relativePath}/package.json`);
    lines.push(`!${project.relativePath}/postcss.config.cjs`);
    lines.push(`!${project.relativePath}/public/**`);
    lines.push(`!${project.relativePath}/react-router.config.ts`);
    lines.push(`!${project.relativePath}/tailwind.config.ts`);
    lines.push(`!${project.relativePath}/tsconfig.json`);
    lines.push(`!${project.relativePath}/vite.config.ts`);

    if (project.config.deployment?.dbInstance) {
      lines.push(`!${project.relativePath}/dbschema/**`);
    }

    if (project.config.deployment?.dbInstance) {
      lines.push(`!${project.relativePath}/gel.toml`);
    }
  } else {
    lines.push(`!${project.relativePath}/${BUILD_DIRECTORY}/**`);
    lines.push(`!${project.relativePath}/package.json`);

    if (project.packageJson.bin) {
      lines.push(`!${project.relativePath}/bin/**`);
    }
  }
}

lines.push('!/package-lock.json');
lines.push('!/package.json');
lines.push('!/turbo.json');

lines.sort();
-%>
#
# DO NOT EDIT!
# This file was autogenerated by Carson.
# Changes may cause incorrect behavior and will be lost when the file is regenerated.
#
# Run `npx carson update workspace` to regenerate.
#

# TODO: Use wildcards instead of package names when this is fixed: https://github.com/moby/moby/issues/40319

# ignore everything
*

# except files that are allowed to be in the Docker image
<%- lines.join('\n') %>

# we might also need .npmrc with token
!.npmrc
