---
to: '.github/workflows/check-pull-request.yaml'
strategy: overwrite
---
<%
let appsWithDb = [];

for (let project of workspace.projects) {
  if (project.config.deployment?.dbInstance) {
    appsWithDb.push(project.name);
  }
}

let appsWithDbFilter = appsWithDb.map((name) => `--filter=!${name}`).join(' ');

if (appsWithDbFilter) {
  appsWithDbFilter = `-- ${appsWithDbFilter}`;
}
-%>
#
# DO NOT EDIT!
# This file was autogenerated by Carson.
# Changes may cause incorrect behavior and will be lost when the file is regenerated.
#
# Run `npx carson update workspace` to regenerate.
#

name: Check pull request

on:
  pull_request:
    branches:
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_pull_request:
    name: Check pull request
    if: ${{ github.actor != 'renovate[bot]' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.email "bot@mazanec.dev"
          git config user.name "Bot"

      - uses: actions/setup-node@v4
        with:
          node-version: <%- semver.major(semver.minVersion(DEPENDENCY_VERSIONS.node)) %>

<%
if (workspace.projects.some((project) => project.config.deployment?.dbInstance)) {
-%>

      - uses: geldata/setup-gel@v1
        with:
          server-version: none
<%
}
-%>

      - name: Install packages
        run: npm ci

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git status
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Test
        run: npm test <%- appsWithDbFilter %>

<%
for (let project of workspace.projects) {
  if (project.config.deployment?.dbInstance) {
-%>

      - name: Test "<%- project.name %>"
        run: |
          npm run test -- --filter=<%- project.name %>
        env:
          GEL_INSTANCE: <%- project.config.deployment.dbInstance %>
          GEL_BRANCH: <%- workspace.packageJson.name %>-${{ github.head_ref }}
          GEL_SECRET_KEY: ${{ secrets.<%- lodash.snakeCase(project.config.deployment.dbInstance).toUpperCase() %>_GEL_TOKEN }}
<%
  }
}
-%>

      - name: Check for changes
        run: |
          git config core.filemode false
          git_status=$(git status --porcelain)

          if [[ -n $git_status ]]; then
            echo "You have uncommitted changes!"
            git status --porcelain
            git config --unset core.filemode
            exit 1
          fi

          git config --unset core.filemode

      - name: Check for changesets
        if: "github.actor != 'renovate[bot]'"
        run: npx changeset status --since=origin/<%- getDevelopmentBranch(workspace) %>
